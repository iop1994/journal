写单元测试的一些原则：
1）测试用例能验证函数的正确性（这条都通不过就……）；
2）测试用例尽可能涵盖边界条件（例如遍历一个链表，头指针是空，只有一个节点，链表有N个节点，N是问题描述下允许的最大节点数等等）；
3）一些异常和错误处理（例如往一个函数里传入空指针，传入空串，这个函数能否打印一些log，返回错误码，实现加法的Add函数如何检测和处理溢出等等）
最理想的情况下（时间很多！），应该尽量多写测试用例，以保证代码功能的正确性符合预期，具有良好的容错性。如果代码较复杂，条件分支较多，测试用例最好能覆盖所有的分支路径。
上述原则一般解决了很多“应该测试什么”的问题

最重要作用其实是：让人在修改代码之后能感到安心，踏实（单元测试跑过之后能比用飘柔更自信）。
