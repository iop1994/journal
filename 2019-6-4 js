ECMAScript中所有的函数的参数都是按值传递的。例如：
  let obj = {};
  function changeValue(obj){
    obj.name = 'ConardLi';
    obj = {name:'code秘密花园'};
  }
  changeValue(obj);
  console.log(obj.name); // ConardLi

NaN和其他任何类型比较永远返回false(包括和他自己)。例子：
  NaN == NaN // false
  
typeof
  适用场景
  typeof操作符可以准确判断一个变量的 原始类型 和 函数类型
    typeof 'ConardLi'  // string
    typeof 123  // number
    typeof true  // boolean
    typeof Symbol()  // symbol
    typeof undefined  // undefined
    typeof function(){}  // function
    
  不适用场景
   除函数外所有的引用类型都会被判定为object
      typeof [] // object
      typeof {} // object
      typeof new Date() // object
      typeof /^\d*$/; // object
