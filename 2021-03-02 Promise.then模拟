
function Promise(fn_executor) {
    var fn_onResolve_ = null
    var onReject_ = null

    this.then = function (fn_onResolve, onReject) {
        onResolve_ = fn_onResolve
    };

    // 执行fn_executor函数
    fn_executor(
        (value) => {
            //Promise的延迟绑定，要不然会报“fn_onResolve_ is not a function“的错误
            // 真正的Promise执行是微任务，setTimeout模拟执行是宏任务
            setTimeout(() => {
                fn_onResolve_(value)
            }, 0)
        },
        null
    );
}

//resolve和reject触发微任务
new Promise((fn_resolve, fn_reject) => { fn_resolve(100) }).then(res => {

})
