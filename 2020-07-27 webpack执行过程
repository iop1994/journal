参考文档：https://www.yuque.com/thzt/webpack/webpack-01

环境：
webpack@4.43.0
webpack-cli@3.3.12
win 10

执行过程：
1.node_modules\.bin\webpack.cmd：webpack的cmd命令运行node_modules\webpack\bin\webpack.js

2.node_modules\webpack\bin\webpack.js：
a.解析一个对象，对象里有两个cli的参数（webpack-cli和webpack-command），过滤两个cli找出程序包所在的位置。
代码：if (installedClis.length === 0) 
b.如果过滤后，找出的cli数量，
  是0时，提示用户没有安装cli；
  是不等于1时，提示用户只能安装一个cli（ To work with the "webpack" command you need only one CLI package, please remove one of them or use them directly via their binary.）；
  是1时，解析cli的package.json，找到bin对象对应的起始执行文件。（ps：webpack-cli的是bin/cli.js，以webpack-cli为例）
  
3.node_modules\webpack-cli\bin\cli.js：

a.代码：require("./config/config-yargs")(yargs);
使用yargs配置webpack的命令（node_modules\webpack-cli\bin\config\config-yargs.js）
b.代码：yargs.parse(process.argv.slice(2),
yargs解析webpack命令行命令
c.代码：options = require("./utils/convert-argv")(argv);
转换webpack命令
d.代码：processOptions(options);
处理配置参数
e.代码：const webpack = require("webpack");
导入webpack模块，
f.代码：compiler = webpack(options);   
创建一个Compiler对象，初始化
g.代码：if (firstOptions.watch || options.watch) 
判断webpack是否开启监听模式，
  开启监听模式，创建一个Watching对象
  不开启监听模式，执行之前，添加一个compiler钩子

